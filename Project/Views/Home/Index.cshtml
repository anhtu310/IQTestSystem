@using X.PagedList.Mvc.Core
@using X.PagedList
@model IPagedList<Project.Models.Test>

@{
    ViewData["Title"] = "Home Page";
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container m-5">
    <div class="row mb-4">
        <div class="col-md-8 mx-auto">
            <form method="get" action="@Url.Action("Index", "Home")">
                <div class="input-group">
                    <input type="text" name="searchTitle" class="form-control"
                           placeholder="Tìm kiếm bài test..." value="@ViewBag.SearchTitle">
                    <button class="btn btn-primary" type="submit">Tìm kiếm</button>
                </div>
            </form>
        </div>
    </div>

    <div class="row mb-4">
        @foreach (var item in Model)
        {
            <div class="col-md-6 mb-4">
                <div class="card h-100 news-card shadow-sm">
                    <div class="card-body d-flex flex-column p-4">
                        <span class="category-badge">
                            <i class="fas fa-tag me-1"></i>
                            @item.Category.CategoryName
                        </span>
                        <h5 class="card-title mb-3">@item.TestName</h5>
                        <p class="card-text flex-grow-1">@item.Description</p>
                        <p class="card-text flex-grow-1">Time Limit: @item.TimeLimit Minutes</p>
                        <p class="card-text">
                            <strong>Created:</strong>
                            @(item.CreatedAt != null ? item.CreatedAt?.ToString("dd/MM/yyyy") : "Chưa có thông tin")
                        </p>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <button type="button" class="btn btn-success mt-3" onclick="confirmTakeQuiz('@item.TestId')">
                                Take Quiz
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-success mt-3" onclick="showLoginAlert()">
                                Take Quiz
                            </button>
                        }

                    </div>
                </div>
            </div>
        }
    </div>

    <div class="mt-3">
        @Html.PagedListPager(Model, page => Url.Action("Index", new
            {
                page,
                searchTitle = ViewBag.SearchTitle,
                categoryID = ViewBag.CategoryID
            }), new PagedListRenderOptions
   {
       LiElementClasses = new string[] { "page-item" },
       PageClasses = new string[] { "page-link" },
       Display = PagedListDisplayMode.IfNeeded,
       MaximumPageNumbersToDisplay = 5,
       UlElementClasses = new string[] { "pagination justify-content-center" }
   })
    </div>
</div>

<script>
    function confirmTakeQuiz(testId) {
        Swal.fire({
            title: 'Xác nhận',
            text: "Bạn có chắc chắn muốn bắt đầu bài quiz này không?",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Bắt đầu',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/Test/TakeQuiz/' + testId;
            }
        });
    }

    function showLoginAlert() {
        Swal.fire({
            title: 'Bạn chưa đăng nhập.',
            text: "Vui lòng đăng nhập để làm bài quiz!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Đăng nhập',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '@Url.Action("Login", "Authentication")';
            }
        });
    }
</script>
